---
import MainLayout from '../../layouts/MainLayout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const books = await getCollection('books');
  return books.map((book) => ({
    params: { slug: book.slug },
    props: { book },
  }));
}

const { book } = Astro.props;
const { Content } = await book.render();

// Structured data for SEO
const structuredData = {
  "@context": "https://schema.org",
  "@type": "Book",
  "name": book.data.title,
  "author": {
    "@type": "Person",
    "name": book.data.author
  },
  "description": book.data.description,
  "image": book.data.coverImageUrl,
  "isbn": book.data.isbn,
  "numberOfPages": book.data.pages,
  "datePublished": book.data.publishedYear.toString(),
  "publisher": "Wayne Leighton Books",
  "offers": [
    {
      "@type": "Offer",
      "price": book.data.priceDigital,
      "priceCurrency": "USD",
      "availability": "https://schema.org/InStock",
      "itemCondition": "https://schema.org/NewCondition",
      "format": "Digital"
    },
    {
      "@type": "Offer", 
      "price": book.data.pricePrint,
      "priceCurrency": "USD",
      "availability": "https://schema.org/InStock",
      "itemCondition": "https://schema.org/NewCondition",
      "format": "Paperback"
    }
  ]
};
---

<MainLayout 
  title={`${book.data.title} by ${book.data.author} - Wayne Leighton Books`}
  description={book.data.description}
  image={book.data.coverImageUrl}
>
  <!-- Structured Data -->
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>
  
  <!-- Preload cover image -->
  <link rel="preload" as="image" href={book.data.coverImageUrl} />

  <section class="py-12">
    <div class="container mx-auto px-4">
      <!-- Breadcrumb -->
      <nav class="mb-8">
        <ol class="flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400">
          <li><a href="/" class="hover:text-primary-600 dark:hover:text-primary-400">Home</a></li>
          <li><span class="mx-2">/</span></li>
          <li><a href="/shop" class="hover:text-primary-600 dark:hover:text-primary-400">Shop</a></li>
          <li><span class="mx-2">/</span></li>
          <li class="text-gray-900 dark:text-white">{book.data.title}</li>
        </ol>
      </nav>

      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
        <!-- Book Cover -->
        <div class="space-y-4">
          <div class="aspect-[3/4] bg-gray-100 dark:bg-gray-800 rounded-lg overflow-hidden">
            <img 
              src={book.data.coverImageUrl} 
              alt={`${book.data.title} cover`}
              class="w-full h-full object-cover"
            />
          </div>
          
          <!-- Additional Info -->
          <div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-4">
            <h3 class="font-semibold text-gray-900 dark:text-white mb-2">Book Details</h3>
            <div class="space-y-1 text-sm text-gray-600 dark:text-gray-400">
              <div class="flex justify-between">
                <span>Category:</span>
                <span class="text-gray-900 dark:text-white">{book.data.category}</span>
              </div>
              <div class="flex justify-between">
                <span>Published:</span>
                <span class="text-gray-900 dark:text-white">{book.data.publishedYear}</span>
              </div>
              {book.data.pages && (
                <div class="flex justify-between">
                  <span>Pages:</span>
                  <span class="text-gray-900 dark:text-white">{book.data.pages}</span>
                </div>
              )}
              {book.data.isbn && (
                <div class="flex justify-between">
                  <span>ISBN:</span>
                  <span class="text-gray-900 dark:text-white">{book.data.isbn}</span>
                </div>
              )}
            </div>
          </div>
        </div>

        <!-- Book Info & Purchase -->
        <div class="space-y-6">
          <div>
            <div class="mb-2">
              <span class="inline-block bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 text-sm px-3 py-1 rounded-full">
                {book.data.category}
              </span>
            </div>
            <h1 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-2">
              {book.data.title}
            </h1>
            <p class="text-xl text-gray-600 dark:text-gray-300 mb-4">
              by {book.data.author}
            </p>
          </div>

          <!-- Description -->
          <div>
            <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-3">About This Book</h2>
            <div class="prose prose-gray dark:prose-invert max-w-none">
              <Content />
            </div>
          </div>

          <!-- Format Selection & Purchase -->
          <div class="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Choose Your Format</h3>
            
            <!-- Format Options -->
            <div class="space-y-3 mb-6">
              <label class="flex items-center p-4 border border-gray-200 dark:border-gray-600 rounded-lg cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
                <input 
                  type="radio" 
                  name="format" 
                  value="digital" 
                  class="format-radio text-primary-600 focus:ring-primary-500" 
                  checked
                />
                <div class="ml-3 flex-1">
                  <div class="flex items-center justify-between">
                    <div>
                      <div class="font-medium text-gray-900 dark:text-white">Digital e-Book</div>
                      <div class="text-sm text-gray-600 dark:text-gray-400">Instant download • PDF & EPUB formats</div>
                    </div>
                    <div class="text-lg font-semibold text-primary-600 dark:text-primary-400">
                      ${book.data.priceDigital}
                    </div>
                  </div>
                </div>
              </label>

              <label class="flex items-center p-4 border border-gray-200 dark:border-gray-600 rounded-lg cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
                <input 
                  type="radio" 
                  name="format" 
                  value="paperback" 
                  class="format-radio text-primary-600 focus:ring-primary-500"
                />
                <div class="ml-3 flex-1">
                  <div class="flex items-center justify-between">
                    <div>
                      <div class="font-medium text-gray-900 dark:text-white">Paperback</div>
                      <div class="text-sm text-gray-600 dark:text-gray-400">Physical book • Free shipping on orders over $25</div>
                    </div>
                    <div class="text-lg font-semibold text-primary-600 dark:text-primary-400">
                      ${book.data.pricePrint}
                    </div>
                  </div>
                </div>
              </label>
            </div>

            <!-- Purchase Button -->
            <button 
              id="add-to-cart-btn"
              class="snipcart-add-item w-full bg-primary-600 hover:bg-primary-700 text-white px-6 py-4 rounded-lg font-semibold text-lg transition-colors flex items-center justify-center space-x-2"
              data-item-id={book.slug}
              data-item-price={book.data.priceDigital}
              data-item-url={`/books/${book.slug}`}
              data-item-image={book.data.coverImageUrl}
              data-item-name={`${book.data.title} (e-Book)`}
              data-item-custom1-name="Format"
              data-item-custom1-options="Digital|Paperback"
              data-item-custom1-value="Digital"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-1.5 6M7 13l-1.5-6m0 0h15M17 21a2 2 0 100-4 2 2 0 000 4zM9 21a2 2 0 100-4 2 2 0 000 4z"></path>
              </svg>
              <span id="cart-btn-text">Add to Cart</span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </section>
</MainLayout>

<script define:vars={{ book }}>
  // Format selection and price update
  const formatRadios = document.querySelectorAll('.format-radio');
  const addToCartBtn = document.getElementById('add-to-cart-btn');
  const buttonText = document.getElementById('button-text');

  function updatePurchaseButton() {
    const selectedFormat = document.querySelector('.format-radio:checked').value;
    const isDigital = selectedFormat === 'digital';
    
    const price = isDigital ? book.priceDigital : book.pricePrint;
    const formatName = isDigital ? 'e-Book' : 'Paperback';
    
    // Update button text
    buttonText.textContent = `Buy ${formatName} — $${price}`;
    
    // Update Snipcart attributes
    addToCartBtn.setAttribute('data-item-price', price.toString());
    addToCartBtn.setAttribute('data-item-name', `${book.title} (${formatName})`);
    addToCartBtn.setAttribute('data-item-custom1-value', isDigital ? 'Digital' : 'Paperback');
  }

  // Add event listeners to format radios
  formatRadios.forEach(radio => {
    radio.addEventListener('change', updatePurchaseButton);
  });

  // Initialize with default selection
  updatePurchaseButton();
</script>